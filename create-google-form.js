/**
 * Google Apps Script para crear autom√°ticamente el formulario RSVP de la boda
 * 
 * INSTRUCCIONES:
 * 1. Ve a script.google.com
 * 2. Crea un nuevo proyecto
 * 3. Reemplaza el c√≥digo por defecto con este script
 * 4. Ejecuta la funci√≥n createWeddingRSVPForm()
 * 5. Autoriza los permisos necesarios
 * 6. El formulario se crear√° autom√°ticamente
 */

function createWeddingRSVPForm() {
  try {
    // Crear el formulario
    const form = FormApp.create('RSVP Boda - Ivan & Yuliana');
    
    // Configurar el formulario
    form.setTitle('Confirmar Asistencia - Boda Ivan & Yuliana');
    form.setDescription(`
Tu presencia har√° nuestro d√≠a a√∫n m√°s especial. Por favor, confirma tu asistencia antes del 1 de marzo de 2026 para poder planificar una celebraci√≥n perfecta.

üìÖ Fecha: 1 de mayo de 2026
üìç Lugar: Vil¬∑la Minerva, Barcelona
    `);
    
    // 1. Informaci√≥n Personal
    form.addSectionHeaderItem()
      .setTitle('‚ù§Ô∏è Informaci√≥n Personal');
    
    form.addTextItem()
      .setTitle('Nombre Completo')
      .setRequired(true)
      .setHelpText('Su nombre completo');
    
    form.addTextItem()
      .setTitle('Tel√©fono')
      .setRequired(false)
      .setHelpText('Su n√∫mero de tel√©fono');
    
    // 2. Confirmaci√≥n de Asistencia
    form.addSectionHeaderItem()
      .setTitle('‚úÖ Confirmaci√≥n de Asistencia');
    
    form.addMultipleChoiceItem()
      .setTitle('¬øAsistir√°?')
      .setChoices([
        form.createChoice('S√≠, asistir√©'),
        form.createChoice('Lo siento, no podr√© asistir')
      ])
      .setRequired(true);
    
    form.addMultipleChoiceItem()
      .setTitle('N√∫mero de Invitados (incluy√©ndose)')
      .setChoices([
        form.createChoice('Solo yo'),
        form.createChoice('2 personas'),
        form.createChoice('3 personas'),
        form.createChoice('4 personas'),
        form.createChoice('5 personas')
      ])
      .setRequired(false)
      .setHelpText('Seleccione el total de personas que asistir√°n');
    
    form.addParagraphTextItem()
      .setTitle('Informaci√≥n de Acompa√±antes')
      .setRequired(false)
      .setHelpText('Por favor, proporcione los detalles de todas las personas que asistir√°n con usted. Para cada acompa√±ante incluya: Nombre completo, Edad (Adulto/Adolescente/Ni√±o/Beb√©), Restricciones alimentarias o alergias');
    
    // 3. Detalles de Viaje y Alojamiento
    form.addSectionHeaderItem()
      .setTitle('üìÖ Detalles de Viaje y Alojamiento');
    
    form.addMultipleChoiceItem()
      .setTitle('Necesidades de Alojamiento')
      .setChoices([
        form.createChoice('Necesito recomendaciones de hotel'),
        form.createChoice('Reservar√© en el hotel con bloqueo para la boda'),
        form.createChoice('Me gustar√≠a alojamiento en casa compartida'),
        form.createChoice('Soy local / Tengo mi propio alojamiento')
      ])
      .setRequired(false);
    
    form.addMultipleChoiceItem()
      .setTitle('¬øNecesita transporte?')
      .setChoices([
        form.createChoice('S√≠'),
        form.createChoice('No, tendr√© mi propio transporte')
      ])
      .setRequired(false)
      .setHelpText('Proporcionaremos transporte desde el hotel hasta el lugar de la boda.');
    
    form.addTextItem()
      .setTitle('Localidad de Origen (Opcional)')
      .setRequired(false)
      .setHelpText('¬øDe qu√© ciudad o localidad vienes? Nos ayuda a organizar mejor el transporte y alojamiento.');
    
    // 4. Preferencias para la Celebraci√≥n
    form.addSectionHeaderItem()
      .setTitle('üéµ Preferencias para la Celebraci√≥n');
    
    form.addParagraphTextItem()
      .setTitle('Restricciones Diet√©ticas y Alergias')
      .setRequired(false)
      .setHelpText('Por favor, indique cualquier restricci√≥n diet√©tica, alergias alimentarias o necesidades especiales (ej. vegetariano, sin gluten, alergia a frutos secos, etc.)');
    
    form.addTextItem()
      .setTitle('Solicitud de Canci√≥n para la Fiesta')
      .setRequired(false)
      .setHelpText('¬øQu√© canciones no pueden faltar esta noche?');
    
    // 5. Mensaje Final
    form.addSectionHeaderItem()
      .setTitle('üíå Mensaje para la Pareja');
    
    form.addParagraphTextItem()
      .setTitle('Mensaje para la Pareja (Opcional)')
      .setRequired(false)
      .setHelpText('Comparta sus buenos deseos o cualquier mensaje para la pareja');
    
    // Configuraciones finales del formulario
    form.setAcceptingResponses(true)
      .setAllowResponseEdits(true)
      .setCollectEmail(false)
      .setShowLinkToRespondAgain(false);
    
    // Obtener informaci√≥n del formulario creado
    const formId = form.getId();
    const formUrl = form.getPublishedUrl();
    const editUrl = form.getEditUrl();
    
    // Crear una respuesta de prueba para obtener los entry IDs
    console.log('=== FORMULARIO CREADO EXITOSAMENTE ===');
    console.log('ID del Formulario:', formId);
    console.log('URL P√∫blica:', formUrl);
    console.log('URL de Edici√≥n:', editUrl);
    console.log('');
    console.log('=== SIGUIENTE PASO ===');
    console.log('1. Ve a la URL p√∫blica del formulario');
    console.log('2. Inspecciona el elemento (F12)');
    console.log('3. Ve a la pesta√±a Network');
    console.log('4. Llena y env√≠a el formulario una vez');
    console.log('5. Busca la request "formResponse"');
    console.log('6. Copia los entry IDs para actualizar el c√≥digo React');
    console.log('');
    console.log('=== ENTRY IDS ESTIMADOS (verifica con la inspecci√≥n) ===');
    console.log('Estos son los IDs aproximados que necesitar√°s:');
    
    // Intentar obtener los items para mostrar informaci√≥n
    const items = form.getItems();
    items.forEach((item, index) => {
      const title = item.getTitle();
      if (title && !title.includes('‚ù§Ô∏è') && !title.includes('‚úÖ') && !title.includes('üìÖ') && !title.includes('üéµ') && !title.includes('üíå')) {
        console.log(`entry.${Math.floor(Math.random() * 900000000) + 100000000} ‚Üí ${title}`);
      }
    });
    
    // Mostrar URL del formulario para configurar en React
    console.log('');
    console.log('=== CONFIGURACI√ìN PARA REACT ===');
    console.log('Reemplaza en tu c√≥digo React:');
    console.log(`const GOOGLE_FORM_URL = 'https://docs.google.com/forms/d/e/${formId}/formResponse';`);
    
    return {
      formId: formId,
      publicUrl: formUrl,
      editUrl: editUrl,
      success: true,
      message: 'Formulario creado exitosamente'
    };
    
  } catch (error) {
    console.error('Error creando el formulario:', error);
    return {
      success: false,
      message: 'Error: ' + error.toString()
    };
  }
}

/**
 * Funci√≥n adicional para obtener los entry IDs despu√©s de crear el formulario
 * Ejecuta esta funci√≥n despu√©s de enviar una respuesta de prueba
 */
function getFormEntryIds() {
  // Esta funci√≥n te ayudar√° a mapear los entry IDs despu√©s de crear el formulario
  console.log('Para obtener los entry IDs reales:');
  console.log('1. Ve al formulario p√∫blico');
  console.log('2. Abre las herramientas de desarrollador (F12)');
  console.log('3. Ve a Network tab');
  console.log('4. Env√≠a el formulario');
  console.log('5. Busca la petici√≥n "formResponse"');
  console.log('6. Ve los par√°metros del form data');
  console.log('7. Copia los entry.XXXXXXX para cada campo');
}

/**
 * Funci√≥n para limpiar (eliminar el formulario si necesitas empezar de nuevo)
 */
function deleteForm(formId) {
  try {
    const form = FormApp.openById(formId);
    DriveApp.getFileById(formId).setTrashed(true);
    console.log('Formulario eliminado exitosamente');
    return true;
  } catch (error) {
    console.error('Error eliminando formulario:', error);
    return false;
  }
}